1.6.0
* Bugfixes
- Added additional measures to prevent KM_GetUsableMounts() from being called in-combat
- Fixed a bug where flight protection wasn't working
- Fixed a bug where unable to resolve continent before map had been opened in current session leading to not beingable to detect if the player could use flying by running SetMapToCurrentZone() on login
- Fixed a bug where mounts requiring no skill to use (e.g. Chauffeured Mekgineer's Chopper/Mechano-Hog) would fail to summon
- Fixed a bug where summoning a no skill mount would cause a LUA error even if the mount was successfully summoned

* Changes
- Now calling the ability to prevent dismounting in-flight "in-flight dismount protection"
- In-flight dismount protection turned off by default
- Made it more visually obvious when a feature is toggled off
- All kekmount features are now wrapped in its own API table (and only available from): kekmount. Currently includes kekmount.indexOf(), kekmount.GetUsableMounts() and kekmount.GetMountInfo[].
- Added an indicator for session no-fly to /kmount info
- Made /kmount info more informative and dynamically change depending on what settings are turned on or off

* New features
- Added a second in-flight dismount protection method that requires the player to double tap the mount key to dismount
- Added new local function IsAtMapID() which returns false if the player isn't at the input map ID or true if the player is. Takes a table or number as input.
- Added a function that disables flying for the session (until player relogs or /reload)
- Added a list containing 21 flyable mounts that are now considered both flying and ground mounts (invincible, sky golem etc). Can be toggled using /kmount toggleam
- New command "toggleam" toggles the abovementioned functionality

1.5.1
* Bugfixes
- Fixed a bug where mount would be dismissed in-flight even if flight protection was toggled on

1.5.0
* Bugfixes
- Fixed bug where no usable mounts would be found if player tried to mount while in combat
- Fixed a bug where standing on the bottom of the ocean(/any other surface at the bottom of a body of water) would make the underwater check return false
- Added missing "KMount: " to some error messages

* Changes
- Replaced KM_GetMounts() with global KM_GetUsableMounts()
- Minor optimization through removal of the extremely inefficient table.insert
- Changed behavior so that flying mounts can be summoned while submerged, previously only summoned ground mounts if IsSubmerged() returned true
- Changed behavior so that Blizzard's mount manager is default for selecting favorites
- KM_GetUsableMounts() will now ONLY trigger if MOUNT_JOURNAL_USABILITY_CHANGED or MountJournal OnHide event is triggered or if forced through /kmount update
- Added UpdateMountList() instead of directly using deprecated KM_GetMounts()
- Moved API-part into a seperate file, kmount_api.lua
- Moved Poseidus to KM_UnderWaterMounts as it can be used everywhere and is slower than the regular Vashj'ir seahorse
- Will now wait until PLAYER_LOGIN fires before updating usable mount list

* New features
- Will now check for 8 (including sea legs) common spells granting the player underwater breathing, previously only checked breathing resulting in no underwater mounts being used if there was no breath bar
- Added checks to see if a player is dead or ghost to prevent KM_GetMounts() from failing
- Added check to see if player is moving or falling, since mounts cannot be summoned while doing so
- Added a 0.2 second cooldown on summoning mounts for performance reasons
- Can now forcefully update the mount list via /kmount update
- Added a 2 second grace period when resurfacing/submerging preventing underwater mounts and vashj'ir specific mounts from being summoned, since blizzard provide us with no way of knowing if the player is at the surface of water
- Added metatable, KM_GetMountInfo, to cache GetMountInfoExtraByID() results, automatically map to GetMountIDs() to make it iterable without using pairs and hold a count of mount id span (1-570 as of writing)
- Added a few more debug messages
- Can now list counts of all usable mounts via /kmount mountcount
- Added a ownership test to isValidMount() so that the player can't /kmount setg/f a mount they do not own. It's still possible though to set mounts the player might not be able to use (engineering mounts etc)